{
  "swagger": "2.0",
  "info": {
    "title": "Pusher HTTP API",
    "version": "1.0.0",
    "contact": {
      "url": "https://pusher.com",
      "email": "support@pusher.com"
    },
    "description": "The API is hosted at http://api.pusherapp.com, and may be accessed via HTTP or HTTPS. All requests MUST be authenticated, as described below.\n\n## Authentication\n\nPusher uses a HMAC-based authentication. Once all the parameters have been added to the request, a signature is calculated - `auth_signature`, described below and appended to the query string.\n\n### Generating authentication signatures\n\nThe signature is a HMAC SHA256 hex digest. This is generated by signing a string made up of the following components concatenated with newline characters `\\n`.\n\n* The uppercase request method (e.g. `POST`).\n* The request path (e.g. `/some/resource`).\n* The query parameters sorted by key, with keys converted to lowercase, then joined as in the query string.\n\nNOTE:\n> The string must not be url escaped (e.g. given the keys `auth_key`: `foo`, `Name`: `Something else`, you get `auth_key=foo&name=Something else`).\n\nSee below for a worked example.\n\n### Worked authentication example\n\nAssume that we wish to trigger the `foo` event on the `project-3` channel with JSON `{\"some\":\"data\"}` and that our app credentials are\n\n    app_id  3\n    key     278d425bdf160c739803\n    secret  7ad3773142a6692b25b8\n\nThe request url is\n\n    http://api.pusherapp.com/apps/3/events\n\nSince this is a POST request, the body should contain a hash of parameters encoded as JSON where the data parameter is itself JSON encoded:\n\n```json\n{\"name\":\"foo\",\"channels\":[\"project-3\"],\"data\":\"{\\\"some\\\":\\\"data\\\"}\"}\n```\n\nNote that these parameters may be provided in the query string, although this is discouraged.\n\nAuthentication parameters should be added (assume that these are included in the query string, so the body is unchanged from above). Since the body is non-empty a body_md5 parameter should be added\n\n    auth_key        278d425bdf160c739803\n    auth_timestamp  1353088179\n    auth_version    1.0\n\nThe signature is generated by signing the following string\n\n    POST\\n/apps/3/events\\nauth_key=278d425bdf160c739803&auth_timestamp=1353088179&auth_version=1.0&body_md5=ec365a775a4cd0599faeb73354201b6f\n\nThis should be signed by generating the HMAC SHA256 hex digest with secret key `7ad3773142a6692b25b8`. This yields the following signature\n\n\n    da454824c97ba181a32ccc17a72625ba02771f50b50e1e7430e47a1f3f457e6c\n\nThe API request then becomes\n\n    POST /apps/3/events?auth_key=278d425bdf160c739803&auth_timestamp=1353088179&auth_version=1.0&body_md5=ec365a775a4cd0599faeb73354201b6f&auth_signature=da454824c97ba181a32ccc17a72625ba02771f50b50e1e7430e47a1f3f457e6c HTTP/1.1\n    Content-Type: application/json\n\n    {\"name\":\"foo\",\"channels\":[\"project-3\"],\"data\":\"{\\\"some\\\":\\\"data\\\"}\"}\n\nOr using curl:\n\n    $ curl -H \"Content-Type: application/json\" -d '{\"name\":\"foo\",\"channels\":[\"project-3\"],\"data\":\"{\\\"some\\\":\\\"data\\\"}\"}' \"http://api.pusherapp.com/apps/3/events?auth_key=278d425bdf160c739803&auth_timestamp=1353088179&auth_version=1.0&body_md5=ec365a775a4cd0599faeb73354201b6f&auth_signature=da454824c97ba181a32ccc17a72625ba02771f50b50e1e7430e47a1f3f457e6c\"\n    {}\n\nIf you're having difficulty generating the correct signature in your library please take a look at this http://gist.github.com/376898[example gist].\n\n\n## HTTP Keep-Alive\n\nThe Pusher API supports [HTTP Keep-Alive](https://en.wikipedia.org/wiki/HTTP_persistent_connection). HTTP client libraries that implement this feature are able to re-use a single TCP connection to send multiple HTTP requests thus avoiding the overhead of the TCP connection (typically 100-200ms) between each subsequent request.\n\nIn scenarios where many requests are sent at the same time this can improve the throughput and decrease the load on the machine that is sending those requests.\n"
  },
  "schemes": [
    "https",
    "http"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "x-types": {
    "CommonParams": [
      {
        "name": "app_id",
        "in": "path",
        "description": "Application ID",
        "required": true,
        "type": "string"
      },
      {
        "name": "auth_key",
        "in": "query",
        "description": "Application Key",
        "required": true,
        "type": "string"
      },
      {
        "name": "auth_timestamp",
        "in": "query",
        "required": true,
        "description": "The number of seconds since January 1, 1970 00:00:00 GMT. The server\nwill only accept requests where the timestamp is within 600s of the\ncurrent time.\n",
        "type": "integer"
      },
      {
        "name": "auth_version",
        "in": "query",
        "required": true,
        "description": "Authentication version, currently \"1.0\".",
        "type": "string"
      },
      {
        "name": "body_md5",
        "in": "query",
        "required": false,
        "description": "If the request body is nonempty, this parameter must contain the\nhexadecimal MD5 hash of the body.\n",
        "type": "string"
      },
      {
        "name": "auth_signature",
        "in": "query",
        "description": "Generated auth signature",
        "required": true,
        "type": "string"
      }
    ]
  },
  "paths": {
    "/apps/{app_id}/events": {
      "parameters": [
        {
          "name": "app_id",
          "in": "path",
          "description": "Application ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_key",
          "in": "query",
          "description": "Application Key",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_timestamp",
          "in": "query",
          "required": true,
          "description": "The number of seconds since January 1, 1970 00:00:00 GMT. The server\nwill only accept requests where the timestamp is within 600s of the\ncurrent time.\n",
          "type": "integer"
        },
        {
          "name": "auth_version",
          "in": "query",
          "required": true,
          "description": "Authentication version, currently \"1.0\".",
          "type": "string"
        },
        {
          "name": "body_md5",
          "in": "query",
          "required": false,
          "description": "If the request body is nonempty, this parameter must contain the\nhexadecimal MD5 hash of the body.\n",
          "type": "string"
        },
        {
          "name": "auth_signature",
          "in": "query",
          "description": "Generated auth signature",
          "required": true,
          "type": "string"
        }
      ],
      "post": {
        "summary": "Trigger an event",
        "description": "Published an event to 1-N channels.\n",
        "operationId": "triggerEvent",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "description": "Event to publish",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An empty JSON object",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request - Client error, details in the body"
          },
          "401": {
            "description": "Unauthorized - Authentication error"
          },
          "403": {
            "description": "Forbidden - App disabled or over quota"
          },
          "413": {
            "description": "Request entity too large - Event message over 10k"
          },
          "500": {
            "description": "Internal server error - Something bad happened"
          },
          "503": {
            "description": "Service unavailable - Pusher is down !"
          }
        }
      }
    },
    "/apps/{app_id}/channels": {
      "parameters": [
        {
          "name": "app_id",
          "in": "path",
          "description": "Application ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_key",
          "in": "query",
          "description": "Application Key",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_timestamp",
          "in": "query",
          "required": true,
          "description": "The number of seconds since January 1, 1970 00:00:00 GMT. The server\nwill only accept requests where the timestamp is within 600s of the\ncurrent time.\n",
          "type": "integer"
        },
        {
          "name": "auth_version",
          "in": "query",
          "required": true,
          "description": "Authentication version, currently \"1.0\".",
          "type": "string"
        },
        {
          "name": "body_md5",
          "in": "query",
          "required": false,
          "description": "If the request body is nonempty, this parameter must contain the\nhexadecimal MD5 hash of the body.\n",
          "type": "string"
        },
        {
          "name": "auth_signature",
          "in": "query",
          "description": "Generated auth signature",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Info for multiple channels",
        "description": "Allows fetching a hash of occupied channels (optionally filtered by\nprefix), and optionally one or more attributes for each channel.\n",
        "operationId": "getChannelsInfo",
        "parameters": [
          {
            "name": "filter_by_prefix",
            "description": "Filter the returned channels by a specific prefix. For example in\norder to return only presence channels you would set\nfilter_by_prefix=presence-.\n",
            "in": "query",
            "type": "string"
          },
          {
            "name": "info",
            "description": "A comma separated list of attributes which should be returned for\neach channel. If this parameter is missing, an empty hash of\nattributes will be returned for each channel.\n\nOnly *user_count* is a valid value.\n",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Info about the requestes channels",
            "schema": {
              "$ref": "#/definitions/Channels"
            }
          },
          "400": {
            "description": "Bad request - Client error, details in the body"
          },
          "401": {
            "description": "Unauthorized - Authentication error"
          },
          "403": {
            "description": "Forbidden - App disabled or over quota"
          },
          "500": {
            "description": "Internal server error - Something bad happened"
          },
          "503": {
            "description": "Service unavailable - Pusher is down !"
          }
        }
      }
    },
    "/apps/{app_id}/channels/{channel_name}": {
      "parameters": [
        {
          "name": "app_id",
          "in": "path",
          "description": "Application ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_key",
          "in": "query",
          "description": "Application Key",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_timestamp",
          "in": "query",
          "required": true,
          "description": "The number of seconds since January 1, 1970 00:00:00 GMT. The server\nwill only accept requests where the timestamp is within 600s of the\ncurrent time.\n",
          "type": "integer"
        },
        {
          "name": "auth_version",
          "in": "query",
          "required": true,
          "description": "Authentication version, currently \"1.0\".",
          "type": "string"
        },
        {
          "name": "body_md5",
          "in": "query",
          "required": false,
          "description": "If the request body is nonempty, this parameter must contain the\nhexadecimal MD5 hash of the body.\n",
          "type": "string"
        },
        {
          "name": "auth_signature",
          "in": "query",
          "description": "Generated auth signature",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "Info for one channel",
        "description": "Fetch one or some attributes for a given channel.\n",
        "operationId": "getChannelInfo",
        "parameters": [
          {
            "name": "channel_name",
            "description": "Name of the channel to query",
            "required": true,
            "type": "string",
            "in": "path"
          },
          {
            "name": "info",
            "description": "A comma separated list of attributes which should be returned for the channel. TODO\n",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Channel info",
            "schema": {
              "$ref": "#/definitions/ChannelInfo"
            }
          },
          "400": {
            "description": "Bad request - Client error, details in the body"
          },
          "401": {
            "description": "Unauthorized - Authentication error"
          },
          "403": {
            "description": "Forbidden - App disabled or over quota"
          },
          "500": {
            "description": "Internal server error - Something bad happened"
          },
          "503": {
            "description": "Service unavailable - Pusher is down !"
          }
        }
      }
    },
    "/apps/{app_id}/channels/{channel_name}/users": {
      "parameters": [
        {
          "name": "app_id",
          "in": "path",
          "description": "Application ID",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_key",
          "in": "query",
          "description": "Application Key",
          "required": true,
          "type": "string"
        },
        {
          "name": "auth_timestamp",
          "in": "query",
          "required": true,
          "description": "The number of seconds since January 1, 1970 00:00:00 GMT. The server\nwill only accept requests where the timestamp is within 600s of the\ncurrent time.\n",
          "type": "integer"
        },
        {
          "name": "auth_version",
          "in": "query",
          "required": true,
          "description": "Authentication version, currently \"1.0\".",
          "type": "string"
        },
        {
          "name": "body_md5",
          "in": "query",
          "required": false,
          "description": "If the request body is nonempty, this parameter must contain the\nhexadecimal MD5 hash of the body.\n",
          "type": "string"
        },
        {
          "name": "auth_signature",
          "in": "query",
          "description": "Generated auth signature",
          "required": true,
          "type": "string"
        }
      ],
      "get": {
        "summary": "User data",
        "description": "Fetch user ids currently subscribed to a presence channel. This\nfunctionality is primarily aimed to complement presence webhooks, by\nallowing the initial state of a channel to be fetched.\n\nNote that only presence channels allow this functionality, and a\nrequest to any other kind of channel will result in a 400 HTTP code.\n",
        "parameters": [
          {
            "name": "channel_name",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Channel name"
          }
        ],
        "responses": {
          "200": {
            "description": "User infos",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "400": {
            "description": "Bad request - Client error, details in the body"
          },
          "401": {
            "description": "Unauthorized - Authentication error"
          },
          "403": {
            "description": "Forbidden - App disabled or over quota"
          },
          "default": {
            "description": "Unexpected error"
          }
        }
      }
    }
  },
  "definitions": {
    "TriggerEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the event",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "/^[^:]$/"
        },
        "channel": {
          "type": "string",
          "description": "Name of the channel to publish to",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "/^TODO$/"
        },
        "channels": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Name of the channel to publish to",
            "minLength": 1,
            "maxLength": 255
          }
        },
        "data": {
          "type": "string",
          "description": "Payload of the event",
          "maxLength": 10000
        },
        "socket_id": {
          "type": "string",
          "description": "When set, don't sent the event that specific socket",
          "pattern": "/^\\d+\\.\\d+$/"
        }
      },
      "required": [
        "name",
        "data"
      ]
    },
    "Channels": {
      "type": "object",
      "required": [
        "channels"
      ],
      "properties": {
        "channels": {
          "type": "object",
          "description": "A map between channel names and channel information",
          "additionalProperties": {
            "$ref": "#/definitions/ChannelInfo"
          }
        }
      }
    },
    "ChannelInfo": {
      "type": "object",
      "properties": {
        "occupied": {
          "type": "boolean",
          "description": "true when one or more clients are subscribed to this channel\n"
        },
        "user_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of distinct users currently subscribed to this channel\n(a single user may be subscribed many times, but will only count\nas one). Only for presence channels.\n"
        },
        "subscription_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of connections currently subscribed to this channel.\nThis attribute is not available by default; please contact\nsupport@pusher.com if you would like to enable this feature.\n"
        }
      }
    },
    "UserList": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          }
        }
      }
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": [
            "integer",
            "string"
          ]
        }
      }
    }
  }
}